15/01/12

rsync desired files from computer to rosalind server
better

Check sums before hand 
md5sum *txt.gz > checklist.chk
md5sum-c checklist.chk

using ssh 
#already installed hisat2 and samtools programs onto /tools in home directory 

#all of files are placed into NSC_ESC folder

#testing the first file by 1) renaming txt.gz file to fastq.gz file 
mv 13799X1_161209_D00294_0278_BCAEAJANXX_1.txt.gz 13799X1_161209_D00294_0278_BCAEAJANXX_1.fastq.gz

zcat 13799X1_161209_D00294_0278_BCAEAJANXX_1.fastq.gz | head -5

@HWI-D00294:278:CAEAJANXX:1:1101:1085:1978 1:N:0:TGACCA
GGCTNACACTACTCACTCACAATTCACCACAATGGGAAGCAGATCCATGC
+
CCCC#@EFFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

zcat 13799X1_161209_D00294_0278_BCAEAJANXX_1.fastq.gz | grep @HWI-D00294:278:CAEAJANXX:1:1101:1085:1978 

#only returns one value so, not a merged .txt.gz file 

zcat 13799X1_161209_D00294_0278_BCAEAJANXX_1.fastq.gz | grep @HWI-D00294 | head -100000  | sort | uniq -c | sort -rgk 1,1 | head
      1 @HWI-D00294:278:CAEAJANXX:1:1101:9999:18579 1:N:0:TGACCA
      1 @HWI-D00294:278:CAEAJANXX:1:1101:9999:16743 1:N:0:TGACCA
      1 @HWI-D00294:278:CAEAJANXX:1:1101:9999:11887 1:N:0:TGACCA
      1 @HWI-D00294:278:CAEAJANXX:1:1101:9998:4795 1:N:0:TGACCA
      1 @HWI-D00294:278:CAEAJANXX:1:1101:9998:2846 1:N:0:TGACCA
      1 @HWI-D00294:278:CAEAJANXX:1:1101:9998:19538 1:N:0:TGACCA
      1 @HWI-D00294:278:CAEAJANXX:1:1101:9998:13368 1:N:0:TGACCA
      1 @HWI-D00294:278:CAEAJANXX:1:1101:9997:6142 1:N:0:TGACCA
      1 @HWI-D00294:278:CAEAJANXX:1:1101:9997:5539 1:N:0:TGACCA
      1 @HWI-D00294:278:CAEAJANXX:1:1101:9997:2281 1:N:0:TGACCA
      
 #notice only 1:N:0:TGACCA so means single end 
 #does mean worse coverage but is cheaper so that why it was done
 
 #whilst in the mnt/lustre/users/k.... files use 
 ##Each of the HISAT2 indexes available here on the website comes with a shell script (e.g. make_grch38.sh) that provides instructions (or shell commands) for downloading a reference sequence, gene annotations, and SNPs, and building a HISAT2 index.  You can use the script to build the same HISAT2 index we provide.
#don't need to create own 
wget ftp://ftp.ccb.jhu.edu/pub/infphilo/hisat2/data/grcm38.tar.gz
 
 gunzip grcm38.tar.gz
 tar -xvf grcm38.tar 
 
 #do trial alignment and conversion of sam to bam
hisat2 --dta -x grcm38_snp_tran/genome_tran -U ESC_NSC/13799X1_161209_D00294_0278_BCAEAJANXX_1.fastq.gz -S | samtools view -bS > 13799X1_1.bam 


hisat2 --dta -x /mnt/lustre/users/k1632479/grcm38/genome -U /mnt/lustre/users/k1632479/ESC_NSC/13799X1_161209_D00294_0278_BCAEAJANXX_1.fastq.gz -S /mnt/lustre/users/k1632479/ESC_NSC/13799X1_test.sam 
samtools sort -@ 8 -o /mnt/lustre/users/k1632479/ESC_NSC/13799X1_test.bam /mnt/lustre/users/k1632479/ESC_NSC/13799X1_test.sam
qsubHISAT2test.sh

RESULTS
52586374 reads; of these:
  52586374 (100.00%) were unpaired; of these:
    4123360 (7.84%) aligned 0 times
    33940663 (64.54%) aligned exactly 1 time
    14522351 (27.62%) aligned >1 times
92.16% overall alignment rate


#IT WORKED!!!!

#do trial for loop
#!/bin/bash                                                                                                                                                                                              
for FILE in /mnt/lustre/users/k1632479/ESC_NSC/*.txt.gz; do
    echo $FILE
done

#do a loop to change all .txt.gz files into .fastq.gz Saved as bashtest
#!/bin/bash                                                                                                                                                                                              
DIR="/mnt/lustre/users/k1632479/ESC_NSC/"
for FILE in "$DIR"*.txt.gz; do
mv "$FILE" "${FILE/%.txt.gz/.fastq.gz}"; done


module load bioinformatics/hisat2/2.0.4
module load bioinformatics/STAR/2.5.2a
module load bioinformatics/samtools/1.9


DIR="/mnt/lustre/users/k1632479"
for FILE in "$DIR/ESC_NSC/"*.fastq.gz; do
hisat2 --dta -x ${DIR}/grcm38/genome -U "$FILE" -S "${FILE/%.fastq.qz/.sam}";
samtools sort -@ 8 -o "${FILE/%.fastq.gz/.bam}" "${FILE/%.fastq.qz/.sam}"; done

#Extend for loop to qsub the rest of the alignments
#!/bin/bash                                                                                                                                                                                              
DIR="/mnt/lustre/users/k1632479/"
for FILE in "$DIR/ESC_NSC/"*.fastq.gz; do
hisat2 --dta -x "$DIRgrcm38/genome" -U "$FILE" -S "${FILE/%.fastq.gz/.sam}";
samtools sort -@ 8 -o "${FILE/%.fastq.gz/.sam}" > "${FILE/%.fastq.gz/.bam}"; done
 
#-p 2 : This tells hisat2 that it can use 2 CPU cores on the machine. Short read mapping scales very efficiently across cores so if you have more cores available then you should use them to speed up your analysis.
#-U : Specifies the fastq file of sequence reads to map. If you had paired end data and therefore 2 input files you would use -1 and -2 to specify the two files instead of –U
#-x : Specifies the index file to use – this is the basename for the index downloaded

#HISAT2 indexes named genome_tran or genome_snp_tran use Ensembl gene annotations, which include many more transcripts than RefSeq annotations, due to the inclusion of annotations as predicted by software.


#The HISAT2 indexes for the human genome include only primary assembly.  If you choose to include alternative sequences introduced in GRCh38 and build your own HISAT2 indexes, then please be aware that those alternative sequences are nearly identical to the primary assembly in GRCh38 and as a result some reads may map to many more locations compared to when using the primary assembly only.  HISAT2 often skips those multi-mapped reads if the number of potential locations is more than the value specified by the -k option.  You may want to use a higher value for the -k option to resolve the issue.
 #to begin with want a for loop from home directory to change .txt.gz files to .fastq.gz files
 
 52586374 reads; of these:
  52586374 (100.00%) were unpaired; of these:
    3349906 (6.37%) aligned 0 times
    38497861 (73.21%) aligned exactly 1 time
    10738607 (20.42%) aligned >1 times
93.63% overall alignment rate
45871186 reads; of these:
  45871186 (100.00%) were unpaired; of these:
    4082514 (8.90%) aligned 0 times
    34166899 (74.48%) aligned exactly 1 time
    7621773 (16.62%) aligned >1 times
91.10% overall alignment rate

gzip: /mnt/lustre/users/k1632479/ESC_NSC/13799X3_161209_D00294_0278_BCAEAJANXX_1.fastq.gz: invalid compressed data--format violated
37393514 reads; of these:
  37393514 (100.00%) were unpaired; of these:
    2486783 (6.65%) aligned 0 times
    28134985 (75.24%) aligned exactly 1 time
    6771746 (18.11%) aligned >1 times
93.35% overall alignment rate
46860228 reads; of these:
  46860228 (100.00%) were unpaired; of these:
    2003054 (4.27%) aligned 0 times
    38522049 (82.21%) aligned exactly 1 time
    6335125 (13.52%) aligned >1 times
95.73% overall alignment rate
51463762 reads; of these:
  51463762 (100.00%) were unpaired; of these:
    2235144 (4.34%) aligned 0 times
    43942873 (85.39%) aligned exactly 1 time
    5285745 (10.27%) aligned >1 times
95.66% overall alignment rate
46082205 reads; of these:
  46082205 (100.00%) were unpaired; of these:
    1731254 (3.76%) aligned 0 times
    38978283 (84.58%) aligned exactly 1 time
    5372668 (11.66%) aligned >1 times
96.24% overall alignment rate
 
#to check the run time of hisat2
qacct -o k1632479 -j 4396427

start_time   Thu Jan 17 11:25:31 2019
end_time     Thu Jan 17 13:29:17 2019

#load STAR 
#first update gcc 
module load compilers/gcc/8.1.0

#download fasta files for mus musculus
wget ftp://ftp.ensembl.org/pub/release-95/fasta/mus_musculus/dna/*

#download a gtf file
wget ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_mouse/release_M20/gencode.vM20.chr_patch_hapl_scaff.annotation.gtf.gz

#saved in my home directory
#!/bin/bash                                                                                                                                                                                             
for FILE in /mnt/lustre/users/k1632479/STARreference/genome/*.fa.gz; do
zcat "$FILE" > "${FILE/%.fa.gz/.fasta}"; done

#need to run for loop to change zcat all files 
#afterwards run STAR to the make index 
/users/k1632479/tools/STAR-2.6.0a/source/STAR --runMode genomeGenerate --genomeDir /mnt/lustre/users/k1632479/STARreference/genomeDir --genomeFastaFiles /mnt/lustre/users/k1632479/STARreference/genome/Mus_musculus.GRCm38.dna.chromosome.15.fasta  /mnt/lustre/users/k1632479/STARreference/genome/Mus_musculus.GRCm38.dna.chromosome.3.fasta  /mnt/lustre/users/k1632479/STARreference/genome/Mus_musculus.GRCm38.dna.chromosome.X.fasta /mnt/lustre/users/k1632479/STARreference/genome/Mus_musculus.GRCm38.dna.chromosome.16.fasta /mnt/lustre/users/k1632479/STARreference/genome/Mus_musculus.GRCm38.dna.chromosome.4.fasta /mnt/lustre/users/k1632479/STARreference/genome/Mus_musculus.GRCm38.dna.chromosome.Y.fasta /mnt/lustre/users/k1632479/STARreference/genome/Mus_musculus.GRCm38.dna.chromosome.10.fasta /mnt/lustre/users/k1632479/STARreference/genome/Mus_musculus.GRCm38.dna.chromosome.17.fasta /mnt/lustre/users/k1632479/STARreference/genome/Mus_musculus.GRCm38.dna.chromosome.5.fasta /mnt/lustre/users/k1632479/STARreference/genome/Mus_musculus.GRCm38.dna.nonchromosomal.fasta /mnt/lustre/users/k1632479/STARreference/genome/Mus_musculus.GRCm38.dna.chromosome.11.fasta /mnt/lustre/users/k1632479/STARreference/genome/Mus_musculus.GRCm38.dna.chromosome.18.fasta /mnt/lustre/users/k1632479/STARreference/genome/Mus_musculus.GRCm38.dna.chromosome.6.fasta /mnt/lustre/users/k1632479/STARreference/genome/Mus_musculus.GRCm38.dna.chromosome.12.fasta /mnt/lustre/users/k1632479/STARreference/genome/Mus_musculus.GRCm38.dna.chromosome.19.fasta /mnt/lustre/users/k1632479/STARreference/genome/Mus_musculus.GRCm38.dna.chromosome.7.fasta /mnt/lustre/users/k1632479/STARreference/genome/Mus_musculus.GRCm38.dna.chromosome.13.fasta /mnt/lustre/users/k1632479/STARreference/genome/Mus_musculus.GRCm38.dna.chromosome.1.fasta /mnt/lustre/users/k1632479/STARreference/genome/Mus_musculus.GRCm38.dna.chromosome.8.fasta /mnt/lustre/users/k1632479/STARreference/genome/Mus_musculus.GRCm38.dna.chromosome.14.fasta /mnt/lustre/users/k1632479/STARreference/genome/Mus_musculus.GRCm38.dna.chromosome.2.fasta /mnt/lustre/users/k1632479/STARreference/genome/Mus_musculus.GRCm38.dna.chromosome.9.fasta
--sjdbGTFfile /mnt/lustre/users/k1632479/STARreference/gencode.vM20.chr_patch_hapl_scaff.annotation.gtf --limitGenomeGenerateRAM=33523700437 --sjdbOverhang 99 

#RunThreadN defines the number of threads to be used for genome generation, it has to be set to the number of avaiable cores on the server nodes
#cat /proc/cpuinfo | awk '/^processor/{print $3}' | wc -l. will count the number 
#runMode directs STAR to run genome indices generation job
#genomeDir path to the directory
#genomeFastafiles- specifies one or more FASTA files with genome reference sequences 
#sjdbGTFfile- where they extract splice junction information
#genomeChrBinNbits = min(18, log2(GenomeLength/NumberOfReferences)). e.g. 3~gigaBase genome with 100,000 chromosomes/scaffolds, this is equal to 15.
#log2(20,000/138)=7.14
#count number of references in genome with file grep "^>" Genome.fasta | wc -l
#this will reduce RAM consumption 


#to run STAR, making new qsub
#need to change the sjdbOverhang as single end reads
#install samtools using
module avail
module load bioinformatics/samtools/1.9  

DIR="/mnt/lustre/users/k1632479"
for FILE in "$DIR/ESC_NSC/"*.fastq.gz; do
/users/k1632479/tools/STAR-2.6.0a/source/STAR --genomeDir /mnt/lustre/users/k1632479/STARreference/genomeDir \ --readFilesIn "$FILE" \ --sjdbGTFfile gencode.vM20.chr_patch_hapl_scaff.annotation.gtf  \ --sjdbOverhang 99 \ --runThreadN 16 \ --readFilesCommand zcat| samtools view -bS > "${FILE/%.fastq.gz/_STAR.bam}"; done

