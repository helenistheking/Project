15/01/12

rsync desired files from computer to rosalind server
better

Check sums before hand 
md5sum *txt.gz > checklist.chk
md5sum -c checklist.chk
13799X10_161209_D00294_0278_BCAEAJANXX_2.txt.gz: OK
13799X1_161209_D00294_0278_BCAEAJANXX_1.txt.gz: OK
13799X2_161209_D00294_0278_BCAEAJANXX_1.txt.gz: OK
13799X3_161209_D00294_0278_BCAEAJANXX_1.txt.gz: OK
13799X4_161209_D00294_0278_BCAEAJANXX_1.txt.gz: OK
13799X5_161209_D00294_0278_BCAEAJANXX_1.txt.gz: OK
13799X6_161209_D00294_0278_BCAEAJANXX_2.txt.gz: OK
13799X7_161209_D00294_0278_BCAEAJANXX_2.txt.gz: OK
13799X8_161209_D00294_0278_BCAEAJANXX_2.txt.gz: OK
13799X9_161209_D00294_0278_BCAEAJANXX_2.txt.gz: OK


using ssh 
#already installed hisat2 and samtools programs onto /tools in home directory 

#all of files are placed into NSC_ESC folder

#testing the first file by 1) renaming txt.gz file to fastq.gz file 
mv 13799X1_161209_D00294_0278_BCAEAJANXX_1.txt.gz 13799X1_161209_D00294_0278_BCAEAJANXX_1.fastq.gz

zcat 13799X1_161209_D00294_0278_BCAEAJANXX_1.fastq.gz | head -5

@HWI-D00294:278:CAEAJANXX:1:1101:1085:1978 1:N:0:TGACCA
GGCTNACACTACTCACTCACAATTCACCACAATGGGAAGCAGATCCATGC
+
CCCC#@EFFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG

zcat 13799X1_161209_D00294_0278_BCAEAJANXX_1.fastq.gz | grep @HWI-D00294:278:CAEAJANXX:1:1101:1085:1978 

#only returns one value so, not a merged .txt.gz file 

zcat 13799X1_161209_D00294_0278_BCAEAJANXX_1.fastq.gz | grep @HWI-D00294 | head -100000  | sort | uniq -c | sort -rgk 1,1 | head
      1 @HWI-D00294:278:CAEAJANXX:1:1101:9999:18579 1:N:0:TGACCA
      1 @HWI-D00294:278:CAEAJANXX:1:1101:9999:16743 1:N:0:TGACCA
      1 @HWI-D00294:278:CAEAJANXX:1:1101:9999:11887 1:N:0:TGACCA
      1 @HWI-D00294:278:CAEAJANXX:1:1101:9998:4795 1:N:0:TGACCA
      1 @HWI-D00294:278:CAEAJANXX:1:1101:9998:2846 1:N:0:TGACCA
      1 @HWI-D00294:278:CAEAJANXX:1:1101:9998:19538 1:N:0:TGACCA
      1 @HWI-D00294:278:CAEAJANXX:1:1101:9998:13368 1:N:0:TGACCA
      1 @HWI-D00294:278:CAEAJANXX:1:1101:9997:6142 1:N:0:TGACCA
      1 @HWI-D00294:278:CAEAJANXX:1:1101:9997:5539 1:N:0:TGACCA
      1 @HWI-D00294:278:CAEAJANXX:1:1101:9997:2281 1:N:0:TGACCA
      
 #notice only 1:N:0:TGACCA so means single end 
 #does mean worse coverage but is cheaper so that why it was done
 
 #whilst in the mnt/lustre/users/k.... files use 
 ##Each of the HISAT2 indexes available here on the website comes with a shell script (e.g. make_grch38.sh) that provides instructions (or shell commands) for downloading a reference sequence, gene annotations, and SNPs, and building a HISAT2 index.  You can use the script to build the same HISAT2 index we provide.
#don't need to create own 
wget ftp://ftp.ccb.jhu.edu/pub/infphilo/hisat2/data/grcm38.tar.gz
 
 tar -xzvf grcm38.tar 
 
 #create a similar thing to gtf 
 
  module load general/python/3.5.1 
  
   wget https://raw.githubusercontent.com/DaehwanKimLab/hisat2/master/hisat2_extract_splice_sites.py

 #this uses the gtf file the same as used in STAR to guide the alignment 
 python hisat2_extract_splice_sites.py /mnt/lustre/users/k1632479/grcm38/Mus_musculus.GRCm38.95.gtf > /mnt/lustre/users/k1632479/grcm38/splicesites.txt

  
 
 #do trial alignment and conversion of sam to bam
hisat2 --dta -x grcm38_snp_tran/genome_tran -U ESC_NSC/13799X1_161209_D00294_0278_BCAEAJANXX_1.fastq.gz -S | samtools view -bS > 13799X1_1.bam 


hisat2 --dta -x /mnt/lustre/users/k1632479/grcm38/genome -U /mnt/lustre/users/k1632479/ESC_NSC/13799X1_161209_D00294_0278_BCAEAJANXX_1.fastq.gz -S /mnt/lustre/users/k1632479/ESC_NSC/13799X1_test.sam 
samtools sort -@ 8 -o /mnt/lustre/users/k1632479/ESC_NSC/13799X1_test.bam /mnt/lustre/users/k1632479/ESC_NSC/13799X1_test.sam
qsubHISAT2test.sh

RESULTS
52586374 reads; of these:
  52586374 (100.00%) were unpaired; of these:
    4123360 (7.84%) aligned 0 times
    33940663 (64.54%) aligned exactly 1 time
    14522351 (27.62%) aligned >1 times
92.16% overall alignment rate


#IT WORKED!!!!

#do trial for loop
#!/bin/bash                                                                                                                                                                                              
for FILE in /mnt/lustre/users/k1632479/ESC_NSC/*.txt.gz; do
    echo $FILE
done

#do a loop to change all .txt.gz files into .fastq.gz Saved as bashtest
#!/bin/bash                                                                                                                                                                                              
DIR="/mnt/lustre/users/k1632479/ESC_NSC/"\
for FILE in "$DIR"*.txt.gz; do
mv "$FILE" "${FILE/%.txt.gz/.fastq.gz}"; done

tar -xvf grcm38.tar

module load bioinformatics/hisat2/2.0.4
module load bioinformatics/STAR/2.5.2a
module load bioinformatics/samtools/1.9



#Extend for loop to qsub the rest of the alignments
#!/bin/bash                                                                                                                                                                                              
DIR="/mnt/lustre/users/k1632479/"
for FILE in "$DIR/ESC_NSC/"*.fastq.gz; do
hisat2 --dta -x "$DIRgrcm38/genome" -U "$FILE" -S "${FILE/%.fastq.gz/.sam}";
samtools sort -@ 8 -o "${FILE/%.fastq.gz/.sam}" > "${FILE/%.fastq.gz/.bam}"; done
 
#-p 2 : This tells hisat2 that it can use 2 CPU cores on the machine. Short read mapping scales very efficiently across cores so if you have more cores available then you should use them to speed up your analysis.
#-U : Specifies the fastq file of sequence reads to map. If you had paired end data and therefore 2 input files you would use -1 and -2 to specify the two files instead of –U
#-x : Specifies the index file to use – this is the basename for the index downloaded

#HISAT2 indexes named genome_tran or genome_snp_tran use Ensembl gene annotations, which include many more transcripts than RefSeq annotations, due to the inclusion of annotations as predicted by software.


#The HISAT2 indexes for the human genome include only primary assembly.  If you choose to include alternative sequences introduced in GRCh38 and build your own HISAT2 indexes, then please be aware that those alternative sequences are nearly identical to the primary assembly in GRCh38 and as a result some reads may map to many more locations compared to when using the primary assembly only.  HISAT2 often skips those multi-mapped reads if the number of potential locations is more than the value specified by the -k option.  You may want to use a higher value for the -k option to resolve the issue.
 #to begin with want a for loop from home directory to change .txt.gz files to .fastq.gz files
 
 #the alignHISAT2.sh file
#!/bin/bash
# number of cores used
#$ -pe smp 7

# prefix
#$ -N HISAT2

# How much memory?
#$ -l h_vmem=6G

# How long will it run?
#$ -l h_rt=24:00:00

DIR="/mnt/lustre/users/k1632479/"
for FILE in "$DIR"ESC_NSC/*.fastq.gz; do
hisat2 --dta -x ${DIR}grcm38/genome -U "$FILE" -S "${FILE%.fastq.gz}".sam --known-splicesite-infile /mnt/lustre/users/k1632479/grcm38/splicesites.txt; done

    5218784 (10.18%) aligned 0 times
    41092812 (80.17%) aligned exactly 1 time
    4947227 (9.65%) aligned >1 times
89.82% overall alignment rate
46860228 reads; of these:
  46860228 (100.00%) were unpaired; of these:
    2003054 (4.27%) aligned 0 times
    38522049 (82.21%) aligned exactly 1 time
    6335125 (13.52%) aligned >1 times
95.73% overall alignment rate
51463762 reads; of these:
  51463762 (100.00%) were unpaired; of these:
    2235144 (4.34%) aligned 0 times
    43942873 (85.39%) aligned exactly 1 time
    5285745 (10.27%) aligned >1 times
95.66% overall alignment rate
46082205 reads; of these:
  46082205 (100.00%) were unpaired; of these:
    1731254 (3.76%) aligned 0 times
    38978283 (84.58%) aligned exactly 1 time
    5372668 (11.66%) aligned >1 times
96.24% overall alignment rate
48607544 reads; of these:
  48607544 (100.00%) were unpaired; of these:
    1867248 (3.84%) aligned 0 times
    40349854 (83.01%) aligned exactly 1 time
    6390442 (13.15%) aligned >1 times
96.16% overall alignment rate
[bam_sort_core] merging from 16 files and 8 in-memory blocks...
[bam_sort_core] merging from 16 files and 8 in-memory blocks...
[bam_sort_core] merging from 16 files and 8 in-memory blocks...
[bam_sort_core] merging from 16 files and 8 in-memory blocks...
[bam_sort_core] merging from 16 files and 8 in-memory blocks...
[bam_sort_core] merging from 16 files and 8 in-memory blocks...
[bam_sort_core] merging from 16 files and 8 in-memory blocks...
[bam_sort_core] merging from 16 files and 8 in-memory blocks...
[bam_sort_core] merging from 16 files and 8 in-memory blocks...
 
#to check the run time of hisat2
qacct -o k1632479 -j 4415166

qname        HighMemShortterm.q  
hostname     nodea11.prv.rosalind.compute.estate
group        k1632479            
owner        k1632479            
project      NONE                
department   defaultdepartment   
jobname      HISAT2              
jobnumber    4415166             
taskid       undefined
account      sge                 
priority     0                   
qsub_time    Mon Feb 11 10:13:10 2019
start_time   Mon Feb 11 10:13:10 2019
end_time     Mon Feb 11 13:10:48 2019
granted_pe   smp                 
slots        7                   
failed       0    
exit_status  0                   
ru_wallclock 10658        
ru_utime     10032.783    
ru_stime     251.534      
ru_maxrss    4084664             
ru_ixrss     0                   
ru_ismrss    0                   
ru_idrss     0                   
ru_isrss     0                   
ru_minflt    4837010             
ru_majflt    11                  
ru_nswap     0                   
ru_inblock   8112                
ru_oublock   244888280           
ru_msgsnd    0                   
ru_msgrcv    0                   
ru_nsignals  0                   
ru_nvcsw     14109194            
ru_nivcsw    21727               
cpu          11409.830    
mem          40510.710         
io           692.468           
iow          0.000             
maxvmem      4.295G
arid         undefined

#load STAR 
#first update gcc 
module load compilers/gcc/8.1.0

#download fasta files for mus musculus
wget ftp://ftp.ensembl.org/pub/release-95/fasta/mus_musculus/dna/*


#saved in my home directory
#!/bin/bash                                                                                                                                                                                             
for FILE in /mnt/lustre/users/k1632479/STARreference/genome/*.fa.gz; do
zcat "$FILE" > "${FILE/%.fa.gz/.fasta}"; done

#need to run for loop to change zcat all files 
#afterwards run STAR to the make index saved as makeSTARdirectory.sh
#!/bin/bash

#$ -pe smp 8
#$ -l h_vmem=7G
#$ -cwd

module load bioinformatics/STAR/2.5.2a

STAR --runMode genomeGenerate --genomeDir /mnt/lustre/users/k1632479/STARreference/genomeDir --genomeFastaFiles /mnt/lustre/users/k1632479/STARreference/genome/Mus_musculus.GRCm38.dna_sm.primary_assembly.fa --sjdbGTFfile /mnt/lustre/users/k1632479/STARreference/Mus_musculus.GRCm38.95.gtf --limitGenomeGenerateRAM=33523700437 --sjdbOverhang 99 


#RunThreadN defines the number of threads to be used for genome generation, it has to be set to the number of avaiable cores on the server nodes
#cat /proc/cpuinfo | awk '/^processor/{print $3}' | wc -l. will count the number 
#runMode directs STAR to run genome indices generation job
#genomeDir path to the directory
#genomeFastafiles- specifies one or more FASTA files with genome reference sequences 
#sjdbGTFfile- where they extract splice junction information
#genomeChrBinNbits = min(18, log2(GenomeLength/NumberOfReferences)). e.g. 3~gigaBase genome with 100,000 chromosomes/scaffolds, this is equal to 15.
#log2(20,000/138)=7.14
#count number of references in genome with file grep "^>" Genome.fasta | wc -l
#this will reduce RAM consumption 
Feb 04 13:17:05 ..... started STAR run
Feb 04 13:17:05 ... starting to generate Genome files
Feb 04 13:18:17 ... starting to sort Suffix Array. This may take a long time...
Feb 04 13:18:32 ... sorting Suffix Array chunks and saving them to disk...
Feb 04 14:49:06 ... loading chunks from disk, packing SA...
Feb 04 14:49:55 ... finished generating suffix array
Feb 04 14:49:55 ... generating Suffix Array index
Feb 04 14:53:40 ... completed Suffix Array index
Feb 04 14:53:40 ..... processing annotations GTF
Feb 04 14:53:51 ..... inserting junctions into the genome indices
Feb 04 15:00:05 ... writing Genome to disk ...
Feb 04 15:00:21 ... writing Suffix Array to disk ...
Feb 04 15:01:24 ... writing SAindex to disk
Feb 04 15:01:27 ..... finished successfully


#to run STAR, making new qsub
#need to change the sjdbOverhang as single end reads
#install by first checking using
module avail


shellscipt saved as STAR_NSC.sh

#!/bin/bash
# prefix
#$ -N STAR
#$ -pe smp 7
#$ -l h_vmem=6G

# How long will it run?
#$ -l h_rt=24:00:00

# Set the working directory 
#$ -cwd

module load bioinformatics/STAR/2.5.2a

DIR="/mnt/lustre/users/k1632479"
run_Mode="alignReads"
genome_Dir="$DIR/STARreference/genomeDir"
GTF_file="$DIR/STARreference/Mus_musculus.GRCm38.95.gtf"
Sam_type="BAM SortedByCoordinate"


for FILE in "$DIR/ESC_NSC/"*.fastq.gz; do
    STAR --runMode "$run_Mode" --genomeDir "$genome_Dir" --readFilesIn "$FILE" --sjdbGTFfile "$GTF_file" --runThreadN 8 --readFilesCommand zcat --outFileNamePrefix "$FILE" --outSAMtype BAM SortedByCoordinate ; done

Jan 28 12:00:59 ..... started STAR run
Jan 28 12:00:59 ..... loading genome
Jan 28 12:01:35 ..... processing annotations GTF
Jan 28 12:02:00 ..... inserting junctions into the genome indices
Jan 28 12:03:11 ..... started mapping
Jan 28 12:05:43 ..... started sorting BAM
Jan 28 12:06:12 ..... finished successfully
successful

qacct -o k1632479 

qname        HighMemShortterm.q  
hostname     nodea02.prv.rosalind.compute.estate
group        k1632479            
owner        k1632479            
project      NONE                
department   defaultdepartment   
jobname      STAR                
jobnumber    4408080             
taskid       undefined
account      sge                 
priority     0                   
qsub_time    Mon Feb  4 15:45:08 2019
start_time   Mon Feb  4 15:45:08 2019
end_time     Mon Feb  4 17:54:08 2019
granted_pe   smp                 
slots        6                   
failed       0    
exit_status  0                   
ru_wallclock 7740         
ru_utime     13719.930    
ru_stime     5428.429     
ru_maxrss    29877756            
ru_ixrss     0                   
ru_ismrss    0                   
ru_idrss     0                   
ru_isrss     0                   
ru_minflt    47167195            
ru_majflt    144                 
ru_nswap     0                   
ru_inblock   24296               
ru_oublock   323282248           
ru_msgsnd    0                   
ru_msgrcv    0                   
ru_nsignals  0                   
ru_nvcsw     2491912             
ru_nivcsw    1226884             
cpu          19777.730    
mem          508973.597        
io           1364.999          
iow          0.000             
maxvmem      29.560G
arid         undefined



#Stringtie transcript assembly and quantification
#relative abundance and reconstructions of isoforms expressed from each gene 
#not all are known
#assembling each locus into as many isoforms 
#begins with the most highly expressed transcript assembles and quanitates simutaneously
#then removes the reads associated with that transcript and repeats the process assembling more isoforms until all the reads are used or until number of reads is below the level of transcriptional noise
#computes abundance and exon-intron structure at the same time
#stringtie netwrok flow algorithm computational run-tie efficences- 8GB of RAM needed at most 




DIR=/mnt/lustre/users/k1632479/ESC_NSC/

for FILE in "$DIR"HISATbamfiles/*.bam; do stringtie "$FILE" -p 8 -G /mnt/lustre/users/k1632479/grcm38/Ensembl/Mus_musculus.GRCm38.95.gtf -o "$FILE".gtf; done

DIR=/mnt/lustre/users/k1632479/ESC_NSC/

declare -a array_exp
for FILE2 in "$DIR"HISATbamfiles/stringtie/*.gtf; do array_exp+=($FILE2); done
stringtie -i --merge -p 8 -G /mnt/lustre/users/k1632479/grcm38/Ensembl/Mus_musculus.GRCm38.95.gtf -o stringtie_merged.gtf ${array_exp[*]}

#gffcompare
#used to compare the lists of genes and transcripts same GFT format with reference and merged gtf file- displays te sensitivity and the precision
#sensitivity means the proportion of genes from the annotation correctly reconstructed 
#precision proportion of the output that overlaps the annotation
#need to rerun after the stringtie merge of the file 
#INSTALLATION
git clone git://github.com/gpertea/gclib
git clone git://github.com/gpertea/gffcompare
cd gffcompare
make release
  
  #examine how the transcripts compare with the reference annotation
 /users/k1632479/tools/gffcompare/gffcompare -r /mnt/lustre/users/k1632479/grcm38/Ensembl/Mus_musculus.GRCm38.95.gtf -G -o merged /users/k1632479/brc_scratch/ESC_NSC/HISATbamfiles/stringtie/stringtie_merged.gtf

##gffcompare folder 
#= Summary for dataset: /users/k1632479/brc_scratch/ESC_NSC/HISATbamfiles/strin\
gtie/stringtie_merged.gtf
#     Query mRNAs :  179781 in   60073 loci  (146443 multi-exon transcripts)
#            (20738 multi-transcript loci, ~3.0 transcripts per locus)
# Reference mRNAs :  138139 in   52980 loci  (111832 multi-exon)
# Super-loci w/ reference transcripts:    46950
#-----------------| Sensitivity | Precision  |
        Base level:   100.0     |    86.8    |
        Exon level:   100.0     |    89.4    |
      Intron level:    99.5     |    93.3    |
Intron chain level:   100.0     |    76.4    |
  Transcript level:   100.0     |    76.8    |
       Locus level:   100.0     |    87.3    |

     Matching intron chains:  111832
       Matching transcripts:  138139
              Matching loci:   52980

          Missed exons:       0/439078  (  0.0%)
           Novel exons:   15702/510757  (  3.1%)
        Missed introns:    1378/281467  (  0.5%)
         Novel introns:    3120/300114  (  1.0%)
           Missed loci:       0/52980   (  0.0%)
            Novel loci:    7407/60073   ( 12.3%)

 Total union super-loci across all input datasets: 60073
179781 out of 179781 consensus transcripts written in merged.annotated.gtf (0 d\
iscarded as redundant)

##sensitivity- proportion of genes from the annotation that are correctly reconstructed
##precision- the proportion of the output that overlaps the annotation - relative to the input annotatin

stringtie -e -B -p 8 -G /mnt/lustre/users/k1632479/ESC_NSC/HISATbamfiles/stringtie/stringtie_merged.gtf -o /mnt/lustre/users/k1632479/ESC_NSC/HISATbamfiles/13799X2_161209_D00294_0278_BCAEAJANXX_1_HISAT.gtf /mnt/lustre/users/k1632479/ESC_NSC/HISATbamfiles/13799X2_161209_D00294_0278_BCAEAJANXX_1_HISAT.bam


$ python prepDE.py

List of GTFs sample IDs and paths (lst.txt)

$ python prepDE.py -i lst.txt


#Install R and DESeq2. Upon installing R, install DESeq2 on R:
source("https://bioconductor.org/biocLite.R")
biocLite("DESeq2")

#Import DESeq2 library in R
library("DESeq2")

#Load gene(/transcript) count matrix and labels

countData <- as.matrix(read.csv("gene_count_matrix.csv", row.names="gene_id"))
colData <- read.csv(PHENO_DATA, sep="\t", row.names=1)
##Note: The PHENO_DATA file contains information on each sample, e.g., sex or population. The exact way to import this depends on the format of the file.
#Check all sample IDs in colData are also in CountData and match their orders
all(rownames(colData) %in% colnames(countData))

#should be TRUE

countData <- countData[, rownames(colData)]
all(rownames(colData) == colnames(countData))


#Create a DESeqDataSet from count matrix and labels
dds <- DESeqDataSetFromMatrix(countData = countData, 
        colData = colData, design = ~ CHOOSE_FEATURE)
        
#Run the default analysis for DESeq2 and generate results table
dds <- DESeq(dds)
res <- results(dds)

#Sort by adjusted p-value and display
(resOrdered <- res[order(res$padj), ])




#Repeating for STAR scripts
/users/k1632479/tools/gffcompare/gffcompare -r /mnt/lustre/users/k1632479/grcm38/Ensembl/Mus_musculus.GRCm38.95.gtf -G -o merged /users/k1632479/brc_scratch/ESC_NSC/STAR/stringtie/stringtie_merged.gtf



# Super-loci w/ reference transcripts:    47611
#-----------------| Sensitivity | Precision  |
        Base level:   100.0     |    82.4    |
        Exon level:   100.0     |    95.7    |
      Intron level:    99.5     |    99.5    |
Intron chain level:   100.0     |    99.5    |
  Transcript level:   100.0     |    87.2    |
       Locus level:   100.0     |    78.6    |

     Matching intron chains:  111832
       Matching transcripts:  138139
              Matching loci:   52980

          Missed exons:       0/439078  (  0.0%)
           Novel exons:   14373/459448  (  3.1%)
        Missed introns:    1383/281467  (  0.5%)
         Novel introns:       0/281467  (  0.0%)
           Missed loci:       0/52980   (  0.0%)
            Novel loci:   14156/67312   ( 21.0%)

 Total union super-loci across all input datasets: 67312
158359 out of 158359 consensus transcripts written in merged.annotated.gtf (0 discarded as redundant)
~                                                                                                  
~                           

#NB all the finished gtf files are saved as gtf files in stringtie/ballgown/ballgown_input_files/sampleno
#NB repeat in terminal for each sample
stringtie -e -B -p 8 -G /mnt/lustre/users/k1632479/ESC_NSC/STAR/stringtie/stringtie_merged.gtf -o /mnt/lustre/users/k1632479/ESC_NSC/STAR/stringtie/ballgown/ballgown_input_files/sample01/13799X1_161209_D00294_0278_BCAEAJANXX_1_STAR.gtf /mnt/lustre/users/k1632479/ESC_NSC/STAR/13799X1_161209_D00294_0278_BCAEAJANXX_1.fastq.gzAligned.sortedByCoord.out.bam

#2
stringtie -e -B -p 8 -G /mnt/lustre/users/k1632479/ESC_NSC/STAR/stringtie/stringtie_merged.gtf -o /mnt/lustre/users/k1632479/ESC_NSC/STAR/stringtie/ballgown/ballgown_input_files/sample02/13799X2_161209_D00294_0278_BCAEAJANXX_1_STAR.gtf /mnt/lustre/users/k1632479/ESC_NSC/STAR/

#3
stringtie -e -B -p 8 -G /mnt/lustre/users/k1632479/ESC_NSC/STAR/stringtie/stringtie_merged.gtf -o /mnt/lustre/users/k1632479/ESC_NSC/STAR/stringtie/ballgown/ballgown_input_files/sample03/13799X3_161209_D00294_0278_BCAEAJANXX_1_STAR.gtf /mnt/lustre/users/k1632479/ESC_NSC/STAR/

#4
stringtie -e -B -p 8 -G /mnt/lustre/users/k1632479/ESC_NSC/STAR/stringtie/stringtie_merged.gtf -o /mnt/lustre/users/k1632479/ESC_NSC/STAR/stringtie/ballgown/ballgown_input_files/sample04/13799X4_161209_D00294_0278_BCAEAJANXX_1_STAR.gtf /mnt/lustre/users/k1632479/ESC_NSC/STAR/

#5
stringtie -e -B -p 8 -G /mnt/lustre/users/k1632479/ESC_NSC/STAR/stringtie/stringtie_merged.gtf -o /mnt/lustre/users/k1632479/ESC_NSC/STAR/stringtie/ballgown/ballgown_input_files/sample05/13799X5_161209_D00294_0278_BCAEAJANXX_1_STAR.gtf /mnt/lustre/users/k1632479/ESC_NSC/STAR/

#6
stringtie -e -B -p 8 -G /mnt/lustre/users/k1632479/ESC_NSC/STAR/stringtie/stringtie_merged.gtf -o /mnt/lustre/users/k1632479/ESC_NSC/STAR/stringtie/ballgown/ballgown_input_files/sample06/13799X6_161209_D00294_0278_BCAEAJANXX_1_STAR.gtf /mnt/lustre/users/k1632479/ESC_NSC/STAR/

#7
stringtie -e -B -p 8 -G /mnt/lustre/users/k1632479/ESC_NSC/STAR/stringtie/stringtie_merged.gtf -o /mnt/lustre/users/k1632479/ESC_NSC/STAR/stringtie/ballgown/ballgown_input_files/sample07/13799X7_161209_D00294_0278_BCAEAJANXX_1_STAR.gtf /mnt/lustre/users/k1632479/ESC_NSC/STAR/

#8
stringtie -e -B -p 8 -G /mnt/lustre/users/k1632479/ESC_NSC/STAR/stringtie/stringtie_merged.gtf -o /mnt/lustre/users/k1632479/ESC_NSC/STAR/stringtie/ballgown/ballgown_input_files//13799X8_161209_D00294_0278_BCAEAJANXX_1_STAR.gtf /mnt/lustre/users/k1632479/ESC_NSC/STAR/

#9
stringtie -e -B -p 8 -G /mnt/lustre/users/k1632479/ESC_NSC/STAR/stringtie/stringtie_merged.gtf -o /mnt/lustre/users/k1632479/ESC_NSC/STAR/stringtie/ballgown/ballgown_input_files/sample09/13799X9_161209_D00294_0278_BCAEAJANXX_1_STAR.gtf /mnt/lustre/users/k1632479/ESC_NSC/STAR/

#10
stringtie -e -B -p 8 -G /mnt/lustre/users/k1632479/ESC_NSC/STAR/stringtie/stringtie_merged.gtf -o /mnt/lustre/users/k1632479/ESC_NSC/STAR/stringtie/ballgown/ballgown_input_files/sample10/13799X10_161209_D00294_0278_BCAEAJANXX_1_STAR.gtf /mnt/lustre/users/k1632479/ESC_NSC/STAR/


#-B option, it returns a Ballgown input table file, which contains coverage data for all transcripts. The output table files are placed in the same directory as the main GTF output. These tables have these specific names: (1) e2t.ctab, (2) e_data.ctab, (3) i2t.ctab, (4) i_data.ctab, and (5) t_data.ctab. 

#must load python 2.7.10 NOT 3.1 .... for prepDE.py
#run on my RStudio Macbook

module load general/R/3.5.0

#load ballgown in R
#set the working directory

setwd("/mnt/lustre/users/k1632479/ESC_NSC/STAR/stringtie/ballgown")

library(ballgown)
#library(RSkittleBrewer)
library(genefilter)
library(dplyr)
library(devtools)

#need to run ballgown to get the object for running polyester

pheno_data = read.table(file ="PHENO_DATA.csv", header = TRUE, sep = ",")


#read in expresion data created by string tie
sample_full_path <- paste("/mnt/lustre/users/k1632479/ESC_NSC/STAR/stringtie/ballgown/ballgown_input_files",pheno_data[,1], sep = '/')
sample_full_path <- paste(sample_full_path,"", sep = '/')


bg = ballgown(samples=as.vector(sample_full_path),pData=pheno_data)


#Filter low-abundance genes. Here we remove all transcripts with a variance across the samples of less than one
bg_filt = subset(bg,"rowVars(texpr(bg)) >1",genomesubset=TRUE)
#Load gene names for lookup later in the tutorial
bg_table = texpr(bg_filt, 'all')
bg_gene_names = unique(bg_table[, 9:10])
#Pull the gene_expression data frame from the ballgown object
gene_expression = as.data.frame(gexpr(bg_filt))
#View the first five rows of data (all columns) in one of the dataframes created
head(gene_expression)




